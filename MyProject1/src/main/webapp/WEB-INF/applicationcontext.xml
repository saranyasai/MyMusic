<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:security="http://www.springframework.org/schema/security"
   xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
    <beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <beans:property name="driverClassName" value="org.h2.Driver" />
        <beans:property name="url" value="jdbc:h2:tcp://localhost/~/test" />
        <beans:property name="username" value="sa" />
        <beans:property name="password" value="" />
    </beans:bean>
<context:component-scan base-package="com.musichub"/>
<beans:bean id="prodvalidator" class="com.musichub.validator.ProductValidation"/>
 <beans:bean id="sessionFactory"  class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <beans:property name="dataSource" ref="dataSource" />               
        <beans:property name="hibernateProperties">
            <beans:props>
                <beans:prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</beans:prop>
                <beans:prop key="hibernate.show_sql">true</beans:prop>
                <beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>               
            </beans:props>
        </beans:property>        
       <beans:property name="packagesToScan">
           <beans:list><beans:value>com.musichub</beans:value></beans:list>       
        </beans:property> 
    </beans:bean>
   <beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <beans:property name="sessionFactory" ref="sessionFactory" />
    </beans:bean>
   <security:http auto-config="true">
      <security:intercept-url pattern="/admin/**" access="ROLE_ADMIN" />
   <security:form-login
           login-page="/login"
           default-target-url="/"
           login-processing-url="/j_spring_security_check"
           authentication-failure-url="/login?error"
           username-parameter="username"
           password-parameter="password" />
       <security:logout
           logout-success-url="/login?logout" />
   </security:http>

<!-- security:authentication-manager>
<security:authentication-provider>
   <security:jdbc-user-service data-source-ref="dataSource"
users-by-username-query="select username,password from user3 where username='baba'"
authorities-by-username-query="select u1.username, u2.role_name from user3 u1, userroles u2 where u1.username=u2.username and u1.username='baba'"/>
</security:authentication-provider>-->

<security:authentication-manager>
<security:authentication-provider>
<security:jdbc-user-service data-source-ref="dataSource"
users-by-username-query="select username,password,enabled from user_authentication where username=?"
authorities-by-username-query="select u1.username, u2.role from user_authentication u1, user_authorization u2 where u1.user_id = u2.user_id and u1.username =?" />
</security:authentication-provider>
</security:authentication-manager>
<!--    <security:authentication-manager> -->
<!--        <security:authentication-provider> -->
<!--         <security:jdbc-user-service data-source-ref="dataSource" -->
<!--                                       authorities-by-username-query="SELECT username,role_name From USERROLES WHERE username = ?" -->
<!--                                         users-by-username-query="SELECT us.username,ur.role_name,us.password FROM USER3 us,USERROLES ur WHERE us.username = ?" /> -->
<!--        </security:authentication-provider> -->
<!--    </security:authentication-manager> -->
</beans:beans>